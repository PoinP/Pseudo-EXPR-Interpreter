/*read uservalue

step = 1
currnum = 0
reversednum = 0

while uservalue > 0 do 
	currnum = currnum + (uservalue % 10) * step

	numcopy = currnum

	while numcopy > 0 do
		reversednum = reversednum * 10 + (numcopy % 10)
		numcopy = numcopy / 10
	done

	ispalindorm = reversednum == currnum

	if ispalindorm then print currnum else currnum = currnum

	reversednum = 0
	step = step * 10
	uservalue = uservalue / 10
done*/

/*FACT[n] = if n <= 1 then 1 else n * FACT[n - 1]

print FACT[5]*/

/*ISPOWEROFTWO[num] = if num == 1 then 1 else num % 2 == 0 and ISPOWEROFTWO[num / 2]

print ISPOWEROFTWO[1023]*/

/*read starta
read enda
read startb 
read endb
read number

inunion = (starta <= number and number <= enda) or (startb <= number and number <= endb)
inintersection = number <= enda and number >= startb
indifference = !inintersection and (number >= starta and number <= enda)
insingleset = !inintersection and inunion

print inunion
print inintersection
print indifference
print insingleset*/


/*read n
sum = 0

while n > 0 do
    sum = sum + n % 10
    n = n / 10
done*/

print sum

/*sum = 0
read userinput

while userinput != 0 do
    sum = sum + userinput
    read userinput
done

print sum*/


/*FIb[x] = if x == 0 then 0 else if x < 2 then 1 else FIb[x - 1] + FIb[x - 2]

read fib

print FIb[fib]*/

 
/*D[x] = x

print D[5]
print 0
print 0

x = 0
while x < 3 do
    i = 0

    D[x] = x + 10

    while i < 5 and x % 2 == 0 do
        print D[x] + 1000
        i = i + 1
    done

    print x
    x = x + 1
done

print 0
print 0

print D[10]*/